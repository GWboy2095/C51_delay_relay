C51 COMPILER V9.60.0.0   MAIN                                                              08/26/2020 00:25:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          /* --- STC12C5Axx Series 16-bit Timer 1 Demo -------------------------*/
   3          
   4          
   5          #include "reg51.h"
   6          //#include <stdbool.h>
   7          //#include <stdint.h>
   8          #include "intrins.h"
   9          typedef unsigned char BYTE;
  10          typedef unsigned int WORD;
  11          
  12          //-----------------------------------------------
  13          
  14          /* define constants */
  15          #define FOSC 11059200L
  16          #define MODE1T                      //Timer clock mode, comment this line is 12T mode, uncomment is 1T mod
             -e
  17          
  18          #ifdef MODE1T
  19           #define T1MS (65536-FOSC/1000)      //1ms timer calculation method in 1T mode
  20          #else
               #define T1MS (65536-FOSC/12/1000)   //1ms timer calculation method in 12T mode
              #endif
  23          
  24          /* define SFR */
  25          sfr AUXR = 0x8e;                    //Auxiliary register
  26          sbit IN_CH_0 = P0^0;               //work LED, flash once per second
  27          sbit IN_CH_1 = P0^1;
  28          
  29          sbit OUT_CH_0 = P1^0;
  30          sbit OUT_CH_1 = P1^2;
  31          
  32          
  33          sbit Key_1 = P0^4;
  34          sbit Key_2 = P0^5;
  35          sbit Key_3 = P0^6;
  36          /* define variables */
  37          WORD delay_X0;                         //1000 times counter
  38          WORD delay_X1;
  39          BYTE OUT_0_Close=0;
  40          BYTE OUT_1_Close=0;
  41          WORD delay = 2000;
  42          //-----------------------------------------------
  43          
  44          /* Timer0 interrupt routine */
  45          void tm1_isr() interrupt 3 using 1
  46          {
  47   1          TL1 = T1MS;                     //reload timer1 low byte
  48   1          TH1 = T1MS >> 8;                //reload timer1 high byte
  49   1        if(delay_X0>0)delay_X0--;
  50   1          if (delay_X0 == 1)               //1ms * 1000 -> 1s
  51   1          {
  52   2            OUT_0_Close ++;
  53   2            //OUT_1_Close = 0;
C51 COMPILER V9.60.0.0   MAIN                                                              08/26/2020 00:25:36 PAGE 2   

  54   2          }
  55   1        if(delay_X1>0)delay_X1--; 
  56   1          if (delay_X1 == 1)
  57   1          {
  58   2      //      OUT_1_Close = 1;
  59   2            OUT_0_Close = 2;
  60   2            delay_X0 = delay;
  61   2          }
  62   1      }
  63          
  64          //-----------------------------------------------
  65          
  66          /* main program */
  67          void main()
  68          {
  69   1        static BYTE Last_X0 = 1,Last_X1 = 1;
  70   1      #ifdef MODE1T
  71   1          AUXR = 0x40;                    //timer1 work in 1T mode
  72   1      #endif
  73   1          TMOD = 0x10;                    //set timer1 as mode1 (16-bit)
  74   1          TL1 = T1MS;                     //initial timer1 low byte
  75   1          TH1 = T1MS >> 8;                //initial timer1 high byte
  76   1          TR1 = 1;                        //timer1 start running
  77   1          ET1 = 1;                        //enable timer1 interrupt
  78   1          EA = 1;                         //open global interrupt switch
  79   1      //    count = 0;                      //initial counter
  80   1      
  81   1          while (1)                      //loop
  82   1          {
  83   2          if(!Key_1)
  84   2            {
  85   3              delay = 500;
  86   3            }
  87   2            if(!Key_2)
  88   2            {
  89   3              delay = 1000;
  90   3            }
  91   2            if(!Key_3)
  92   2            {
  93   3              delay = 2000;
  94   3            }
  95   2      
  96   2            if(!IN_CH_0 && IN_CH_0 != Last_X0 && IN_CH_1)
  97   2            {
  98   3              delay_X0 = delay;
  99   3              OUT_0_Close = 0;
 100   3            }
 101   2            else if(!IN_CH_0 && IN_CH_0 != Last_X0 && !IN_CH_1)
 102   2            {
 103   3              delay_X1 = delay;       
 104   3            }
 105   2            else if(!IN_CH_1 && IN_CH_1 != Last_X1 && !IN_CH_0)
 106   2            {
 107   3              delay_X1 = delay;
 108   3            }
 109   2            else if(IN_CH_1 && IN_CH_1 != Last_X1 && !IN_CH_0)
 110   2            {
 111   3              OUT_0_Close = 1;
 112   3            }
 113   2            Last_X0 = IN_CH_0;
 114   2            Last_X1 = IN_CH_1;  
 115   2            
C51 COMPILER V9.60.0.0   MAIN                                                              08/26/2020 00:25:36 PAGE 3   

 116   2            
 117   2          if(IN_CH_0)
 118   2          {
 119   3            OUT_CH_0 = 1;
 120   3            OUT_CH_1 = 1;
 121   3            OUT_0_Close = 0;
 122   3          }
 123   2          if(IN_CH_1)
 124   2          {
 125   3            OUT_CH_1 = 1;
 126   3          }
 127   2          
 128   2        
 129   2            if(!IN_CH_0&&OUT_0_Close == 1)
 130   2            {
 131   3              OUT_CH_0 = 0;
 132   3            } 
 133   2            if (!IN_CH_0 && !IN_CH_1 && OUT_0_Close == 2 )
 134   2            {
 135   3              OUT_CH_0 = 1;
 136   3              OUT_CH_1 = 0;
 137   3              //OUT_1_Close = 0;
 138   3            }
 139   2           if (!IN_CH_0 && !IN_CH_1 && OUT_0_Close == 3 )
 140   2            {
 141   3              OUT_CH_0 = 0;
 142   3              OUT_CH_1 = 0;
 143   3            } 
 144   2            
 145   2      //      if(!IN_CH_1)
 146   2      //      {
 147   2      //        OUT_CH_1 = 0;
 148   2      //      }
 149   2      //      else if(IN_CH_1&&OUT_1_Close)
 150   2      //      {
 151   2      //        OUT_CH_1 = 1;
 152   2      //        //OUT_1_Close = 0;
 153   2      //      }
 154   2      //      
 155   2      //      if(IN_CH_0 && IN_CH_0 != Last_X0)
 156   2      //      {
 157   2      //        delay_X0 = delay*3;
 158   2      //        OUT_0_Close = 0;
 159   2      //      }
 160   2      //      if(IN_CH_1 && IN_CH_1 != Last_X1)
 161   2      //      {
 162   2      //        delay_X1 = delay;
 163   2      //        OUT_1_Close = 0;
 164   2      //      }     
 165   2      //      Last_X0 = IN_CH_0;
 166   2      //      Last_X1 = IN_CH_1;
 167   2          }
 168   1      }
 169          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
C51 COMPILER V9.60.0.0   MAIN                                                              08/26/2020 00:25:36 PAGE 4   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
